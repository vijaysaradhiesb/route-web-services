<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:osgi="http://www.springframework.org/schema/osgi"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                       http://www.springframework.org/schema/beans/spring-beans.xsd
                       http://www.springframework.org/schema/osgi
                       http://www.springframework.org/schema/osgi/spring-osgi.xsd">

    <!-- The idea of below code is to listen on custom path, not starting HTTP Server on new port -->
    <!-- Constructing Camel servlet and exposing to OSGi to let it be handled by PAX EXAM -->

    <bean id="camelServlet" class="org.apache.camel.component.servlet.CamelHttpTransportServlet">
        <property name="servletName" value="{servlet.name}"/>
    </bean>

    <osgi:service id="camelServletService" ref="camelServlet">
        <osgi:interfaces>
            <value>javax.servlet.Servlet</value>
            <value>org.apache.camel.http.common.CamelServlet</value>
        </osgi:interfaces>
        <osgi:service-properties>
            <entry key="alias" value="/integ-web-ws" />
            <entry key="matchOnUriPrefix" value="true" />
            <entry key="servlet-name" value="${servlet.name}"/>
        </osgi:service-properties>
    </osgi:service>

    <osgi:reference id="servletref" interface="org.apache.camel.http.common.CamelServlet" depends-on="camelServletService">
        <osgi:listener bind-method="register" unbind-method="unregister">
            <ref bean="httpRegistry"/>
        </osgi:listener>
    </osgi:reference>

    <bean id="httpRegistry" class="org.apache.camel.component.servlet.DefaultHttpRegistry"/>

    <bean id="servlet" class="org.apache.camel.component.servlet.ServletComponent">
        <property name="httpRegistry" ref="httpRegistry" />
    </bean>

</beans>
